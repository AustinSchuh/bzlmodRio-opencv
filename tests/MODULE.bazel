bazel_dep(name = "bzlmodrio-opencv", version = "")
local_path_override(
    module_name = "bzlmodrio-opencv",
    path = "..",
)

bazel_dep(name = "googletest", version = "1.14.0.bcr.1")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_java", version = "8.11.0")
bazel_dep(name = "rules_jvm_external", version = "6.3")
bazel_dep(name = "rules_bazelrio", version = "0.0.14")
bazel_dep(name = "rules_bzlmodrio_toolchains", version = "2025-1.bcr4")
bazel_dep(name = "rules_pmd", version = "7.2.0.bcr1")
bazel_dep(name = "rules_checkstyle", version = "10.12.2.bcr1")
bazel_dep(name = "rules_spotless", version = "2.40.0.bcr1")
bazel_dep(name = "rules_bzlmodrio_jdk", version = "17.0.12-7.bcr1")
bazel_dep(name = "rules_python", version = "1.5.0-rc2")
single_version_override(
    module_name = "rules_python",
    # The strip level for the patch (usually 1 for git diff patches)
    patch_strip = 1,
    # Path to your patch file (relative to your workspace root)
    patches = ["@//:python_windows.patch"],
    # The version of the module you are patching
    version = "1.5.0-rc2",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.junit.jupiter:junit-jupiter-api:5.10.1",
        "org.junit.jupiter:junit-jupiter-params:5.10.1",
        "org.junit.jupiter:junit-jupiter-engine:5.10.1",
        "org.junit.platform:junit-platform-commons:1.6.1",
        "org.junit.platform:junit-platform-console:1.6.1",
        "org.junit.platform:junit-platform-engine:1.6.1",
        "org.junit.platform:junit-platform-launcher:1.6.1",
        "org.junit.platform:junit-platform-suite-api:1.6.1",
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(
    maven,
    "maven",
)
